name: Swift

on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    runs-on: macos-11
    strategy:
      matrix:
        test:
          - { scheme: 'BikeRide', destination: 'platform=iOS Simulator,OS=14.5,name=iPhone 12' }
          #- { scheme: 'BikeRide', destination: 'id=7B1B776D-8E17-4AD0-9EAE-1A2DE12860CB'}
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Select Xcode version 12.5.1
      run: sudo xcode-select -s /Applications/Xcode_12.5.1.app/Contents/Developer        
    - name: Show the currently detailed version of Xcode for CLI
      run: xcode-select -p
    - name: Show build settings
      run: xcodebuild -workspace ./BikeRide/BikeRide.xcworkspace -scheme '${{ matrix.test['scheme'] }}' -showBuildSettings
    - name: Show Build SDK
      run: xcodebuild -workspace ./BikeRide/BikeRide.xcworkspace -scheme '${{ matrix.test['scheme'] }}' -showsdks
    - name: Show Available Destinations
      run: xcodebuild -workspace ./BikeRide/BikeRide.xcworkspace -scheme '${{ matrix.test['scheme'] }}' -showdestinations
    - name: Show list of devices
      run: xcrun xctrace list devices        
    - name: Setup project
      run: ./bin/setup
      shell: /bin/zsh {0}
    # Pods no longer needed as we store the complete pod folder to git
    #- name: Install pods
    #  working-directory: ./BikeRide
    #  run: pod install
    - name: Swift linting
      working-directory: ./BikeRide
      run: ./Pods/SwiftLint/swiftlint
    - name: Generate class diagrams
      working-directory: ./plantuml
      run: ./genClassDiagrams.sh
      shell: /bin/zsh {0}
    - name: Upload class diagrams into artefact
      uses: actions/upload-artifact@v2
      with:
        name: class-diagrams
        path: plantuml/*.svg
    - name: Unit and UI test
      working-directory: ./BikeRide 
      run: xcodebuild clean test -scheme '${{ matrix.test['scheme'] }}' -destination '${{ matrix.test['destination'] }}' -showBuildTimingSummary -enableCodeCoverage YES
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
