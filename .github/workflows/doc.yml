name: Documentation
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
jobs:
  documentation:
    runs-on: macos-11
    steps:
      - name: Checkout repo 
        uses: actions/checkout@v2
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_DEV_CERTIFICATE_BASE64: ${{ secrets.BUILD_DEV_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          APP_PROVISION_PROFILE_BASE64: ${{ secrets.APP_PROVISION_PROFILE_BASE64 }}
          WATCHAPP_PROVISION_PROFILE_BASE64: ${{ secrets.WATCHAPP_PROVISION_PROFILE_BASE64 }}
          WATCHEXT_PROVISION_PROFILE_BASE64: ${{ secrets.WATCHEXT_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH_APP=$RUNNER_TEMP/build_pp_app.mobileprovision
          PP_PATH_WATCHAPP=$RUNNER_TEMP/build_pp_watchapp.mobileprovision
          PP_PATH_WATCHEXT=$RUNNER_TEMP/build_pp_watchext.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_DEV_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$APP_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH_APP
          echo -n "$WATCHAPP_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH_WATCHAPP
          echo -n "$WATCHEXT_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH_WATCHEXT

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH_APP ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH_WATCHAPP ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH_WATCHEXT ~/Library/MobileDevice/Provisioning\ Profiles
          swift --version
      - name: Install jazzy
        run: |
          gem install jazzy
      #- 
      #  name: Generate documentation (Jazzy)
      #  run: jazzy --clean --config .jazzy.yaml
      #  working-directory: ./BikeRide
      - name: Publish jazzy docs
        uses: steven0351/publish-jazzy-docs@v1
        with:
          personal_access_token: ${{ secrets.DOCREPO_ACCESS }}
          config: .jazzy.yaml
          args: clean
          working-directory: ./BikeRide
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: APIDocs
          path: ./BikeRide/bikeride_docs
      #- name: Push to gh-pages
      #  run: |
      #    git config --global user.email "${GITHUB_ACTOR}"
      #    git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"
      #    git clone "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" out
      #    cd out
      #    git checkout gh-pages
      #    git rm -rf .
      #    cd ..
      #    cp -a docs/. out/.
      #    cd out
      #    git add -A
      #    git commit -m "Automated deployment to GitHub Pages: ${GITHUB_SHA}" --allow-empty
      #    git push origin gh-pages
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp_app.mobileprovision
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp_watchapp.mobileprovision
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp_watchext.mobileprovision
