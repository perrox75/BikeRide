@startuml
' STYLE START
hide empty members
skinparam shadowing false
' STYLE END


class "BikeRideApp" as BikeRideApp << (S, SkyBlue) struct >> { 
  -appDelegate : AppDelegate
  -modelData
  ~body : some Scene 
}
class "AppDelegate" as AppDelegate << (C, DarkSeaGreen) >> { 
  ~application(_:didFinishLaunchingWithOptions:)
  ~application(_:didRegisterForRemoteNotificationsWithDeviceToken:)
  ~application(_:didFailToRegisterForRemoteNotificationsWithError:) 
}
class "SnapshotImage" as SnapshotImage << (S, SkyBlue) struct >> { 
  ~id
  ~image : UIImage 
}
class "Data" as Data << (X, Orchid) extension >> { 
  prettyPrintedJSONString : NSString? 
}
class "CloudFile" as CloudFile << (C, DarkSeaGreen) >> { 
  ~isLocal : Bool
  ~id
  ~cloudURL : URL?
  ~filename : String
  ~isGpxExtension : Bool
  ~snapshotImages : [UIImage]
  ~gpx : GPX?
  ~geoJSONData : Data
  ~isGeoJSONDataLoaded : Bool
  ~init(cloudURL:)
  ~downloadFile()
  ~loadGPX()
  ~generateSnapshot() 
}
class "CloudFile" as CloudFile0 << (X, Orchid) extension >> { 
  cloudFileWasDownloaded(_:) 
}
class "CloudFileProviderDelegate" as CloudFileProviderDelegate << (P, GoldenRod) protocol >> { 
  ~cloudFileWasDownloaded(_:) 
}
class "CloudFileProvider" as CloudFileProvider << (C, DarkSeaGreen) >> { 
  ~delegate : CloudFileProviderDelegate?
  -iCloudDocumentsURL : URL?
  -checkContainerAvailable()
  ~listCloudFiles()
  ~downloadFile(url:) 
}
class "ModelData" as ModelData << (X, Orchid) extension >> { 
  counterpartAppReachableDidChange(_:)
  stateDidChange(_:)
  gpxWasReceived(_:) 
}
class "ModelData" as ModelData1 << (C, DarkSeaGreen) >> { 
  ~connectivityProvider
  ~cloudFileProvider
  ~textFieldValue : String
  ~textMessageReceived : String
  ~cloudFiles : [CloudFile]
  ~isCloudLoading : Bool
  ~isCloudLoaded : Bool
  ~isWatchReachable : Bool
  ~lastMessage : CFAbsoluteTime
  ~init()
  ~loadCloudFiles()
  ~sendGpx(gpx:) 
}
class "Location" as Location << (S, SkyBlue) struct >> { 
  ~latitude : Double
  ~longitude : Double
  ~isWaypoint : Bool
  ~isVisited : Bool
  ~distanceToNextLocation : Double
  ~directionToNextLocation : Double 
}
class "Route" as Route << (S, SkyBlue) struct >> { 
  ~name : String
  ~distance : Double
  ~locations : [Location]
  ~locationResolution : Int
  ~visited : Bool 
}
BikeRideApp --|> App : inherits
AppDelegate --|> NSObject : inherits
AppDelegate --|> UIApplicationDelegate : inherits
AppDelegate --|> ClassName : inherits
SnapshotImage --|> Identifiable : inherits
CloudFile --|> ClassName : inherits
CloudFile --|> Identifiable : inherits
CloudFile --|> ObservableObject : inherits
CloudFile --|> CloudFileProviderDelegate : inherits
CloudFileProviderDelegate ..|> AnyObject : inherits
CloudFileProvider --|> ClassName : inherits
ModelData <.. ConnectivityProviderDelegate : inherits
ModelData <.. ClassName : inherits
ModelData <.. ObservableObject : inherits
CloudFile <.. CloudFile0 : ext
@enduml
